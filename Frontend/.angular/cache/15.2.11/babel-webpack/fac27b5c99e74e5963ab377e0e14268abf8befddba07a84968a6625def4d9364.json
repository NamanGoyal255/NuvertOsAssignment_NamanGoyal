{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class EditCompoundComponent {\n  constructor(fb, http, route, router) {\n    this.fb = fb;\n    this.http = http;\n    this.route = route;\n    this.router = router;\n    this.isSubmitting = false;\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'; // Replace with valid token\n  }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      image: [''],\n      description: ['']\n    });\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n    this.http.get(`http://localhost:3000/compounds/${this.id}`, {\n      headers\n    }).subscribe({\n      next: data => this.form.patchValue(data),\n      error: err => this.errorMessage = 'Failed to load compound details.'\n    });\n  }\n  onSubmit() {\n    if (this.form.invalid) return;\n    this.isSubmitting = true;\n    this.successMessage = '';\n    this.errorMessage = '';\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n    this.http.put(`http://localhost:3000/compounds/${this.id}`, this.form.value, {\n      headers\n    }).subscribe({\n      next: () => {\n        this.successMessage = 'Compound updated successfully!';\n        this.router.navigate(['/compounds', this.id]); // Optional: navigate after short delay\n      },\n\n      error: err => {\n        this.errorMessage = err.error?.message || 'Failed to update compound.';\n      },\n      complete: () => {\n        this.isSubmitting = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function EditCompoundComponent_Factory(t) {\n      return new (t || EditCompoundComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditCompoundComponent,\n      selectors: [[\"app-edit-compound\"]],\n      decls: 0,\n      vars: 0,\n      template: function EditCompoundComponent_Template(rf, ctx) {},\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAAqBC,WAAW,QAAQ,sBAAsB;;;;;AAO9D,OAAM,MAAOC,qBAAqB;EAShCC,YACUC,EAAe,EACfC,IAAgB,EAChBC,KAAqB,EACrBC,MAAc;IAHd,OAAE,GAAFH,EAAE;IACF,SAAI,GAAJC,IAAI;IACJ,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAVhB,iBAAY,GAAG,KAAK;IACpB,mBAAc,GAAG,EAAE;IACnB,iBAAY,GAAG,EAAE;IAET,UAAK,GAAG,yCAAyC,CAAC,CAAC;EAOxD;;EAEHC,QAAQ;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IACjD,IAAI,CAACC,IAAI,GAAG,IAAI,CAACT,EAAE,CAACU,KAAK,CAAC;MACxBC,IAAI,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACgB,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,WAAW,EAAE,CAAC,EAAE;KACjB,CAAC;IAEF,MAAMC,OAAO,GAAG,IAAIlB,WAAW,EAAE,CAACmB,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAACC,KAAK,EAAE,CAAC;IAE9E,IAAI,CAAChB,IAAI,CAACO,GAAG,CAAM,mCAAmC,IAAI,CAACH,EAAE,EAAE,EAAE;MAAEU;IAAO,CAAE,CAAC,CAACG,SAAS,CAAC;MACtFC,IAAI,EAAGC,IAAI,IAAK,IAAI,CAACX,IAAI,CAACY,UAAU,CAACD,IAAI,CAAC;MAC1CE,KAAK,EAAGC,GAAG,IAAK,IAAI,CAACC,YAAY,GAAG;KACrC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,IAAI,CAAChB,IAAI,CAACiB,OAAO,EAAE;IAEvB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACJ,YAAY,GAAG,EAAE;IAEtB,MAAMT,OAAO,GAAG,IAAIlB,WAAW,EAAE,CAACmB,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAACC,KAAK,EAAE,CAAC;IAE9E,IAAI,CAAChB,IAAI,CAAC4B,GAAG,CAAC,mCAAmC,IAAI,CAACxB,EAAE,EAAE,EAAE,IAAI,CAACI,IAAI,CAACqB,KAAK,EAAE;MAAEf;IAAO,CAAE,CAAC,CAACG,SAAS,CAAC;MAClGC,IAAI,EAAE,MAAK;QACT,IAAI,CAACS,cAAc,GAAG,gCAAgC;QACtD,IAAI,CAACzB,MAAM,CAAC4B,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC1B,EAAE,CAAC,CAAC,CAAC,CAAC;MACjD,CAAC;;MACDiB,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACD,KAAK,EAAEU,OAAO,IAAI,4BAA4B;MACxE,CAAC;MACDC,QAAQ,EAAE,MAAK;QACb,IAAI,CAACN,YAAY,GAAG,KAAK;MAC3B;KACD,CAAC;EACJ;;;uBArDW7B,qBAAqB;IAAA;EAAA;;;YAArBA,qBAAqB;MAAAoC;MAAAC;MAAAC;MAAAC;MAAAC;IAAA;EAAA","names":["Validators","HttpHeaders","EditCompoundComponent","constructor","fb","http","route","router","ngOnInit","id","snapshot","paramMap","get","form","group","name","required","image","description","headers","set","token","subscribe","next","data","patchValue","error","err","errorMessage","onSubmit","invalid","isSubmitting","successMessage","put","value","navigate","message","complete","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["E:\\Naman_NuvertOs\\NuvertOsAssignment_NamanGoyal\\Frontend\\src\\app\\services\\edit-compound\\edit-compound.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-edit-compound',\n  templateUrl: './edit-compound.component.html',\n  styleUrls: ['./edit-compound.component.css']\n})\nexport class EditCompoundComponent implements OnInit {\n  form!: FormGroup;\n  id!: string;\n  isSubmitting = false;\n  successMessage = '';\n  errorMessage = '';\n\n  private token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'; // Replace with valid token\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.id = this.route.snapshot.paramMap.get('id')!;\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      image: [''],\n      description: ['']\n    });\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n\n    this.http.get<any>(`http://localhost:3000/compounds/${this.id}`, { headers }).subscribe({\n      next: (data) => this.form.patchValue(data),\n      error: (err) => this.errorMessage = 'Failed to load compound details.'\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n\n    this.isSubmitting = true;\n    this.successMessage = '';\n    this.errorMessage = '';\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n\n    this.http.put(`http://localhost:3000/compounds/${this.id}`, this.form.value, { headers }).subscribe({\n      next: () => {\n        this.successMessage = 'Compound updated successfully!';\n        this.router.navigate(['/compounds', this.id]); // Optional: navigate after short delay\n      },\n      error: (err) => {\n        this.errorMessage = err.error?.message || 'Failed to update compound.';\n      },\n      complete: () => {\n        this.isSubmitting = false;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}