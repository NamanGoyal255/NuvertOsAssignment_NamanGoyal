{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CompoundsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1, \" Working on the page...\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CompoundsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \"\\n\");\n  }\n}\nfunction CompoundsComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function CompoundsComponent_div_2_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const compound_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.goToCompound(compound_r5.id));\n    });\n    i0.ɵɵelement(1, \"div\", 13)(2, \"img\", 14);\n    i0.ɵɵelementStart(3, \"h2\", 15);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const compound_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", compound_r5.name);\n    i0.ɵɵproperty(\"src\", compound_r5.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", compound_r5.name, \" \");\n  }\n}\nfunction CompoundsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵtemplate(2, CompoundsComponent_div_2_div_2_Template, 5, 3, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CompoundsComponent_div_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.prevPage());\n    });\n    i0.ɵɵtext(5, \" \\u00AB Previous \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CompoundsComponent_div_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.nextPage());\n    });\n    i0.ɵɵtext(7, \" Next \\u00BB \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.compounds);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.page === 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.page >= ctx_r2.Math.ceil(ctx_r2.total / ctx_r2.pageSize));\n  }\n}\nfunction CompoundsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" No compounds found.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CompoundsComponent {\n  constructor() {\n    this.Math = Math;\n    this.http = inject(HttpClient);\n    this.route = inject(ActivatedRoute);\n    this.router = inject(Router);\n    this.authService = inject(AuthService);\n    this.compounds = [];\n    this.isLoading = true;\n    this.errorMessage = '';\n    this.page = 1;\n    this.total = 0;\n    this.pageSize = 10; // Assume page size (update if different)\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.page = +params['page'] || 1;\n      this.fetchCompounds();\n    });\n  }\n  fetchCompounds() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    this.isLoading = true;\n    this.http.get(`http://localhost:3000/compounds?page=${this.page}`, {\n      headers\n    }).subscribe({\n      next: res => {\n        this.compounds = res.data;\n        this.total = res.total;\n        this.isLoading = false;\n      },\n      error: err => {\n        this.errorMessage = err.error?.message || 'Failed to load compounds';\n        this.isLoading = false;\n      }\n    });\n  }\n  prevPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.updateUrlAndFetch();\n    }\n  }\n  nextPage() {\n    // Calculate max page count\n    const maxPage = Math.ceil(this.total / this.pageSize);\n    if (this.page < maxPage) {\n      this.page++;\n      this.updateUrlAndFetch();\n    }\n  }\n  updateUrlAndFetch() {\n    // Update URL query params and fetch compounds for new page\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: {\n        page: this.page\n      },\n      queryParamsHandling: 'merge'\n    });\n    this.fetchCompounds();\n  }\n  goToCompound(id) {\n    this.router.navigate(['/compound', id]);\n  }\n  static {\n    this.ɵfac = function CompoundsComponent_Factory(t) {\n      return new (t || CompoundsComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompoundsComponent,\n      selectors: [[\"app-compounds\"]],\n      decls: 4,\n      vars: 4,\n      consts: [[\"class\", \"text-center text-lg text-gray-600 py-6 animate-pulse\", 4, \"ngIf\"], [\"class\", \"text-red-600 text-center font-medium py-4\", 4, \"ngIf\"], [\"class\", \"p-4\", 4, \"ngIf\"], [\"class\", \"text-center text-gray-500 py-6\", 4, \"ngIf\"], [1, \"text-center\", \"text-lg\", \"text-gray-600\", \"py-6\", \"animate-pulse\"], [1, \"text-red-600\", \"text-center\", \"font-medium\", \"py-4\"], [1, \"p-4\"], [1, \"flex\", \"flex-wrap\", \"justify-center\", \"gap-6\"], [\"class\", \"w-72 p-5 bg-white rounded-2xl shadow-md hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 cursor-pointer relative overflow-hidden group\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-6\", \"text-center\", \"flex\", \"justify-center\", \"gap-4\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"px-4\", \"py-2\", \"rounded-md\", \"bg-gray-200\", \"text-black\", \"hover:opacity-80\", \"disabled:opacity-50\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"px-4\", \"py-2\", \"rounded-md\", \"bg-blue-400\", \"text-black\", \"hover:opacity-80\", \"disabled:opacity-50\", 3, \"disabled\", \"click\"], [1, \"w-72\", \"p-5\", \"bg-white\", \"rounded-2xl\", \"shadow-md\", \"hover:shadow-xl\", \"transition-all\", \"duration-300\", \"transform\", \"hover:-translate-y-2\", \"cursor-pointer\", \"relative\", \"overflow-hidden\", \"group\", 3, \"click\"], [1, \"absolute\", \"top-0\", \"left-0\", \"right-0\", \"h-1\", \"opacity-0\", \"group-hover:opacity-100\", \"transition-opacity\", \"duration-300\", \"bg-gradient-to-r\", \"from-indigo-500\", \"via-purple-500\", \"to-pink-500\", \"animate-gradient-x\"], [1, \"w-full\", \"h-52\", \"object-contain\", \"rounded-xl\", \"bg-gray-100\", \"mb-4\", \"transition-transform\", \"duration-300\", \"group-hover:scale-105\", 3, \"src\", \"alt\"], [1, \"text-xl\", \"font-semibold\", \"text-slate-800\", \"text-center\", \"capitalize\", \"transition-colors\", \"duration-300\", \"group-hover:text-transparent\", \"bg-clip-text\", \"group-hover:bg-gradient-to-r\", \"group-hover:from-indigo-500\", \"group-hover:to-purple-500\"], [1, \"text-center\", \"text-gray-500\", \"py-6\"]],\n      template: function CompoundsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CompoundsComponent_div_0_Template, 2, 0, \"div\", 0);\n          i0.ɵɵtemplate(1, CompoundsComponent_div_1_Template, 2, 1, \"div\", 1);\n          i0.ɵɵtemplate(2, CompoundsComponent_div_2_Template, 8, 3, \"div\", 2);\n          i0.ɵɵtemplate(3, CompoundsComponent_div_3_Template, 2, 0, \"div\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.compounds.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.compounds.length === 0);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21wb3VuZHMuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VydmljZXMvY29tcG91bmRzL2NvbXBvdW5kcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvS0FBb0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["inject","HttpClient","HttpHeaders","ActivatedRoute","Router","AuthService","i0","CompoundsComponent","constructor","Math","ngOnInit","route","queryParams","subscribe","params","page","fetchCompounds","token","authService","getToken","headers","set","isLoading","http","get","next","res","compounds","data","total","error","err","errorMessage","message","prevPage","updateUrlAndFetch","nextPage","maxPage","ceil","pageSize","router","navigate","relativeTo","queryParamsHandling","goToCompound","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Naman_NuvertOs\\NuvertOsAssignment_NamanGoyal\\Frontend\\src\\app\\services\\compounds\\compounds.component.ts","E:\\Naman_NuvertOs\\NuvertOsAssignment_NamanGoyal\\Frontend\\src\\app\\services\\compounds\\compounds.component.html"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-compounds',\n  templateUrl: './compounds.component.html',\n  styleUrls: ['./compounds.component.css']\n})\nexport class CompoundsComponent implements OnInit {\n  Math = Math;\n\n  private http = inject(HttpClient);\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private authService = inject(AuthService);\n\n  compounds: Compound[] = [];\n  isLoading = true;\n  errorMessage = '';\n  page = 1;\n  total = 0;\n  pageSize = 10; // Assume page size (update if different)\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.page = +params['page'] || 1;\n      this.fetchCompounds();\n    });\n  }\n\n  fetchCompounds() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    this.isLoading = true;\n    this.http.get<{ data: Compound[], total: number }>(\n      `http://localhost:3000/compounds?page=${this.page}`,\n      { headers }\n    ).subscribe({\n      next: (res) => {\n        this.compounds = res.data;\n        this.total = res.total;\n        this.isLoading = false;\n      },\n      error: (err) => {\n        this.errorMessage = err.error?.message || 'Failed to load compounds';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  prevPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.updateUrlAndFetch();\n    }\n  }\n\n  nextPage() {\n    // Calculate max page count\n    const maxPage = Math.ceil(this.total / this.pageSize);\n    if (this.page < maxPage) {\n      this.page++;\n      this.updateUrlAndFetch();\n    }\n  }\n\n  updateUrlAndFetch() {\n    // Update URL query params and fetch compounds for new page\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { page: this.page },\n      queryParamsHandling: 'merge',\n    });\n    this.fetchCompounds();\n  }\n\n  goToCompound(id: number) {\n    this.router.navigate(['/compound', id]);\n  }\n}\n\ninterface Compound {\n  id: number;\n  name: string;\n  image: string;\n  description: string;\n}\n","<!-- Loading message -->\n<div *ngIf=\"isLoading\" class=\"text-center text-lg text-gray-600 py-6 animate-pulse\">\n  Working on the page...\n</div>\n\n<!-- Error message -->\n<div *ngIf=\"errorMessage\" class=\"text-red-600 text-center font-medium py-4\">\n  {{ errorMessage }}\n</div>\n\n<!-- Compounds list -->\n<div *ngIf=\"!isLoading && compounds.length > 0\" class=\"p-4\">\n  <div class=\"flex flex-wrap justify-center gap-6\">\n    <div\n      *ngFor=\"let compound of compounds\"\n      class=\"w-72 p-5 bg-white rounded-2xl shadow-md hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 cursor-pointer relative overflow-hidden group\"\n      (click)=\"goToCompound(compound.id)\"\n    >\n      <!-- Gradient line -->\n      <div class=\"absolute top-0 left-0 right-0 h-1 opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 animate-gradient-x\"></div>\n\n      <!-- Image -->\n      <img\n        [src]=\"compound.image\"\n        alt=\"{{ compound.name }}\"\n        class=\"w-full h-52 object-contain rounded-xl bg-gray-100 mb-4 transition-transform duration-300 group-hover:scale-105\"\n      />\n\n      <!-- Name -->\n      <h2 class=\"text-xl font-semibold text-slate-800 text-center capitalize transition-colors duration-300 group-hover:text-transparent bg-clip-text group-hover:bg-gradient-to-r group-hover:from-indigo-500 group-hover:to-purple-500\">\n        {{ compound.name }}\n      </h2>\n    </div>\n  </div>\n\n  <!-- Pagination Buttons -->\n  <div class=\"mt-6 text-center flex justify-center gap-4\">\n    <button\n      class=\"px-4 py-2 rounded-md bg-gray-200 text-black hover:opacity-80 disabled:opacity-50\"\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"prevPage()\"\n      [disabled]=\"page === 1\"\n    >\n      &laquo; Previous\n    </button>\n    <button\n      class=\"px-4 py-2 rounded-md bg-blue-400 text-black hover:opacity-80 disabled:opacity-50\"\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"nextPage()\"\n      [disabled]=\"page >= Math.ceil(total / pageSize)\"\n    >\n      Next &raquo;\n    </button>\n  </div>\n</div>\n\n<!-- No compounds message -->\n<div *ngIf=\"!isLoading && compounds.length === 0\" class=\"text-center text-gray-500 py-6\">\n  No compounds found.\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}