{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CompoundsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1, \"Working on the page...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CompoundsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \"\\n\");\n  }\n}\nfunction CompoundsComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function CompoundsComponent_div_2_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const compound_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.goToCompound(compound_r5.id));\n    });\n    i0.ɵɵelement(1, \"img\", 12);\n    i0.ɵɵelementStart(2, \"h2\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const compound_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", compound_r5.name);\n    i0.ɵɵproperty(\"src\", compound_r5.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(compound_r5.name);\n  }\n}\nfunction CompoundsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵtemplate(2, CompoundsComponent_div_2_div_2_Template, 4, 3, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CompoundsComponent_div_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.prevPage());\n    });\n    i0.ɵɵtext(5, \" Previous \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CompoundsComponent_div_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.nextPage());\n    });\n    i0.ɵɵtext(7, \" Next \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.compounds);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.page === 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.page >= ctx_r2.Math.ceil(ctx_r2.total / ctx_r2.pageSize));\n  }\n}\nfunction CompoundsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" No compounds found.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CompoundsComponent {\n  constructor() {\n    this.Math = Math;\n    this.http = inject(HttpClient);\n    this.route = inject(ActivatedRoute);\n    this.router = inject(Router);\n    this.authService = inject(AuthService);\n    this.compounds = [];\n    this.isLoading = true;\n    this.errorMessage = '';\n    this.page = 1;\n    this.total = 0;\n    this.pageSize = 10; // Assume page size (update if different)\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.page = +params['page'] || 1;\n      this.fetchCompounds();\n    });\n  }\n  fetchCompounds() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    this.isLoading = true;\n    this.http.get(`http://localhost:3000/compounds?page=${this.page}`, {\n      headers\n    }).subscribe({\n      next: res => {\n        this.compounds = res.data;\n        this.total = res.total;\n        this.isLoading = false;\n      },\n      error: err => {\n        this.errorMessage = err.error?.message || 'Failed to load compounds';\n        this.isLoading = false;\n      }\n    });\n  }\n  prevPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.updateUrlAndFetch();\n    }\n  }\n  nextPage() {\n    // Calculate max page count\n    const maxPage = Math.ceil(this.total / this.pageSize);\n    if (this.page < maxPage) {\n      this.page++;\n      this.updateUrlAndFetch();\n    }\n  }\n  updateUrlAndFetch() {\n    // Update URL query params and fetch compounds for new page\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: {\n        page: this.page\n      },\n      queryParamsHandling: 'merge'\n    });\n    this.fetchCompounds();\n  }\n  goToCompound(id) {\n    this.router.navigate(['/compound', id]);\n  }\n  static {\n    this.ɵfac = function CompoundsComponent_Factory(t) {\n      return new (t || CompoundsComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompoundsComponent,\n      selectors: [[\"app-compounds\"]],\n      decls: 4,\n      vars: 4,\n      consts: [[\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"error\", 4, \"ngIf\"], [\"class\", \"page\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"loading\"], [1, \"error\"], [1, \"page\"], [1, \"cards-container\"], [\"class\", \"compund-card\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"pagination-buttons\", 2, \"margin-top\", \"1rem\", \"text-align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [1, \"compund-card\", 3, \"click\"], [\"width\", \"200\", \"height\", \"200\", 1, \"\", 3, \"src\", \"alt\"], [1, \"card__title\"]],\n      template: function CompoundsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CompoundsComponent_div_0_Template, 2, 0, \"div\", 0);\n          i0.ɵɵtemplate(1, CompoundsComponent_div_1_Template, 2, 1, \"div\", 1);\n          i0.ɵɵtemplate(2, CompoundsComponent_div_2_Template, 8, 3, \"div\", 2);\n          i0.ɵɵtemplate(3, CompoundsComponent_div_3_Template, 2, 0, \"div\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.compounds.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.compounds.length === 0);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf],\n      styles: [\".cards-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  gap: 20px;\\r\\n  padding: 20px;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.compound-card[_ngcontent-%COMP%] {\\r\\n  width: 300px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  \\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 10px;\\r\\n  padding: 15px;\\r\\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\\r\\n}\\r\\n\\r\\n.compound-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  height: 200px;\\r\\n  object-fit: contain;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.error[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n  padding: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VydmljZXMvY29tcG91bmRzL2NvbXBvdW5kcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixTQUFTO0VBQ1QsYUFBYTtFQUNiLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1COztFQUVuQixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmRzLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgZ2FwOiAyMHB4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jb21wb3VuZC1jYXJkIHtcclxuICB3aWR0aDogMzAwcHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIFxyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBwYWRkaW5nOiAxNXB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwwLDAsMC4xKTtcclxufVxyXG5cclxuLmNvbXBvdW5kLWNhcmQgaW1nIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmVycm9yIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["inject","HttpClient","HttpHeaders","ActivatedRoute","Router","AuthService","i0","CompoundsComponent","constructor","Math","ngOnInit","route","queryParams","subscribe","params","page","fetchCompounds","token","authService","getToken","headers","set","isLoading","http","get","next","res","compounds","data","total","error","err","errorMessage","message","prevPage","updateUrlAndFetch","nextPage","maxPage","ceil","pageSize","router","navigate","relativeTo","queryParamsHandling","goToCompound","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Naman_NuvertOs\\NuvertOsAssignment_NamanGoyal\\Frontend\\src\\app\\services\\compounds\\compounds.component.ts","E:\\Naman_NuvertOs\\NuvertOsAssignment_NamanGoyal\\Frontend\\src\\app\\services\\compounds\\compounds.component.html"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-compounds',\n  templateUrl: './compounds.component.html',\n  styleUrls: ['./compounds.component.css']\n})\nexport class CompoundsComponent implements OnInit {\n  Math = Math;\n\n  private http = inject(HttpClient);\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private authService = inject(AuthService);\n\n  compounds: Compound[] = [];\n  isLoading = true;\n  errorMessage = '';\n  page = 1;\n  total = 0;\n  pageSize = 10; // Assume page size (update if different)\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.page = +params['page'] || 1;\n      this.fetchCompounds();\n    });\n  }\n\n  fetchCompounds() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    this.isLoading = true;\n    this.http.get<{ data: Compound[], total: number }>(\n      `http://localhost:3000/compounds?page=${this.page}`,\n      { headers }\n    ).subscribe({\n      next: (res) => {\n        this.compounds = res.data;\n        this.total = res.total;\n        this.isLoading = false;\n      },\n      error: (err) => {\n        this.errorMessage = err.error?.message || 'Failed to load compounds';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  prevPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.updateUrlAndFetch();\n    }\n  }\n\n  nextPage() {\n    // Calculate max page count\n    const maxPage = Math.ceil(this.total / this.pageSize);\n    if (this.page < maxPage) {\n      this.page++;\n      this.updateUrlAndFetch();\n    }\n  }\n\n  updateUrlAndFetch() {\n    // Update URL query params and fetch compounds for new page\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { page: this.page },\n      queryParamsHandling: 'merge',\n    });\n    this.fetchCompounds();\n  }\n\n  goToCompound(id: number) {\n    this.router.navigate(['/compound', id]);\n  }\n}\n\ninterface Compound {\n  id: number;\n  name: string;\n  image: string;\n  description: string;\n}\n","<div *ngIf=\"isLoading\" class=\"loading\">Working on the page...</div>\n\n<div *ngIf=\"errorMessage\" class=\"error\">\n  {{ errorMessage }}\n</div>\n\n<div *ngIf=\"!isLoading && compounds.length > 0\" class=\"page\">\n  <div class=\"cards-container\">\n  \n\n\n  <div\n    *ngFor=\"let compound of compounds\"\n    class=\"compund-card\"\n    (click)=\"goToCompound(compound.id)\"\n  >\n    <img\n    class=\"\"\n    [src]=\"compound.image\"\n    alt=\"{{ compound.name }}\"\n    width=\"200\"\n    height=\"200\"\n    />  \n    <h2 class=\"card__title\">{{compound.name}}</h2>\n  </div>\n</div>\n <!-- Pagination buttons -->\n  <div class=\"pagination-buttons\" style=\"margin-top: 1rem; text-align: center;\">\n    <button mat-raised-button color=\"primary\" (click)=\"prevPage()\" [disabled]=\"page === 1\">\n      Previous\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"nextPage()\" [disabled]=\"page >= Math.ceil(total / pageSize)\">\n      Next\n    </button>\n  </div>\n</div>\n\n\n<div *ngIf=\"!isLoading && compounds.length === 0\">\n  No compounds found.\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}